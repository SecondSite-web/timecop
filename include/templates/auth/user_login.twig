{% extends 'user_index.twig' %}
    {% block body %}
    <form id="login-form" class="user" action="{{ site.worker }}login.php" method="post" role="form" data-toggle="validator">
        <div class="messages"></div>
        <div class="form-group mb-3">
            <input type="email" class="form-control form-control-user" id="email" name="email" placeholder="email@address.com" required="required">
        </div>
        <div class="form-group mb-3">
            <input type="password" class="form-control form-control-user" id="password" name="password" placeholder="Password Please" required="required">
            <input type="hidden" name="nonce" value="{{ call_nonce('login-form') }}" />
        </div>
        <button type="submit" id="submit" class="btn btn-success btn-send">Login</button>
    </form>
    {% endblock %}
{% block scripts %}

    <script type="text/javascript">
        $("#login-form").validate({
            rules: {
                password: {
                    required: true,
                    minlength: 8
                },
                email: {
                    required: true,
                    email: true
                },
            },
            messages: {
                password: {
                    required: "Please provide a password"
                },
                email: "Please enter a valid email address"
            },
            errorElement: "p",
            errorPlacement: function ( error, element ) {
                // Add the `invalid-feedback` class to the error element
                error.addClass("invalid-feedback");

                if ( element.prop("type") === "checkbox" ) {
                    error.insertAfter(element.next("label"));
                } else {
                    error.insertAfter(element);
                }
            },
            highlight: function ( element, errorClass, validClass ) {
                $(element).addClass("is-invalid").removeClass("is-valid");
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).addClass("is-valid").removeClass("is-invalid");
            }

        });
        $('#login-form').on('submit', function (e) {

            if (!e.isDefaultPrevented()) {
                var url = document.location.origin + "/include/workers/login.php";

                $.ajax({
                    type: "POST",
                    url: url,
                    data: $(this).serialize(),
                    success: function (data) {

                        if (data.type === 'danger') {
                            var messageAlert = 'alert-' + data.type;
                            var messageText = data.message;
                            var alertBox = '<div class="alert ' + messageAlert + ' alert-dismissible fade show" role="alert">\n' +
                                '  <strong>Notice! </strong> ' + messageText + '\n' +
                                '  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>\n' +
                                '</div>';
                            if (messageAlert && messageText) {
                                $('#login-form').find('.messages').html(alertBox);
                                $('#login-form')[0].reset();
                            }
                        }
                        if (data.type === 'success') {
                            window.location.replace("/admin/");
                        }
                    }
                });
                return false;
            }
        })
    </script>
{% endblock scripts %}